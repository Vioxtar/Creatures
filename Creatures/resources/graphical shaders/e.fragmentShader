#version 460 core

layout (std430, binding = 0) buffer CreaturePositions
{
	vec2 Positions[];
};

layout (std430, binding = 1) buffer CreatureRadii
{
	float Radii[];
};

layout (std430, binding = 2) buffer CreatureColors
{
	float Colors[];
};

out vec4 FragColor;

uniform mat4 uTransform;

void main()
{
	vec2 coord = vec2(gl_FragCoord.x + 600, gl_FragCoord.y + 600);

	for (int i = 0; i < 10; i++)
	{
		int colIndex = i * 3;
		vec4 pos = uTransform * vec4(Positions[i].xy, 0.0, 1.0);
		if (distance(vec2(pos.xy), coord) < 1000.0)
		{
			FragColor = vec4(Colors[colIndex], Colors[colIndex + 1], Colors[colIndex + 2], 1.0);
		}
		else
		{
		    FragColor = vec4(0.1, 0.1, 0.1, 1.0);
		}
	}
}
